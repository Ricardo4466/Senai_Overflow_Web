[{"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\index.js":"1","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\App.js":"2","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Login\\index.js":"3","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\GlobalStyles.js":"4","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Login\\styles.js":"5","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Input\\index.js":"6","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Input\\styles.js":"7","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\input\\index.js":"8","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\input\\styles.js":"9","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Register\\index.js":"10","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Register\\styles.js":"11","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Home\\index.js":"12","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\router.js":"13","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\services\\api.js":"14","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\services\\security.js":"15","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Home\\styles.js":"16","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Modal\\index.js":"17","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Modal\\styles.js":"18","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Select\\index.js":"19","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Select\\styles.js":"20","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Tag\\index.js":"21","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Tag\\styles.js":"22","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Loading\\index.js":"23","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Loading\\styles.js":"24","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Alert\\index.js":"25","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Alert\\styles.js":"26","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\utils.js":"27"},{"size":199,"mtime":1611775067984,"results":"28","hashOfConfig":"29"},{"size":297,"mtime":1612203153694,"results":"30","hashOfConfig":"29"},{"size":2255,"mtime":1612900434883,"results":"31","hashOfConfig":"29"},{"size":1591,"mtime":1613150375640,"results":"32","hashOfConfig":"29"},{"size":1704,"mtime":1612204466312,"results":"33","hashOfConfig":"29"},{"size":307,"mtime":1611946337602,"results":"34","hashOfConfig":"29"},{"size":945,"mtime":1611945474243,"results":"35","hashOfConfig":"29"},{"size":340,"mtime":1612205850768,"results":"36","hashOfConfig":"29"},{"size":945,"mtime":1611945474243,"results":"37","hashOfConfig":"29"},{"size":3352,"mtime":1612895762873,"results":"38","hashOfConfig":"29"},{"size":1704,"mtime":1612208920820,"results":"39","hashOfConfig":"29"},{"size":12239,"mtime":1613150956890,"results":"40","hashOfConfig":"29"},{"size":803,"mtime":1612292921097,"results":"41","hashOfConfig":"29"},{"size":116,"mtime":1612205473860,"results":"42","hashOfConfig":"29"},{"size":1185,"mtime":1612984158117,"results":"43","hashOfConfig":"29"},{"size":4276,"mtime":1613151251417,"results":"44","hashOfConfig":"29"},{"size":339,"mtime":1612808684194,"results":"45","hashOfConfig":"29"},{"size":880,"mtime":1612553687923,"results":"46","hashOfConfig":"29"},{"size":428,"mtime":1612807646816,"results":"47","hashOfConfig":"29"},{"size":244,"mtime":1612552052099,"results":"48","hashOfConfig":"29"},{"size":223,"mtime":1612805103358,"results":"49","hashOfConfig":"29"},{"size":415,"mtime":1612553168249,"results":"50","hashOfConfig":"29"},{"size":249,"mtime":1612890406442,"results":"51","hashOfConfig":"29"},{"size":591,"mtime":1612890496554,"results":"52","hashOfConfig":"29"},{"size":774,"mtime":1612900336123,"results":"53","hashOfConfig":"29"},{"size":695,"mtime":1612900040831,"results":"54","hashOfConfig":"29"},{"size":588,"mtime":1613147632651,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1xpi2as",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\index.js",[],["117","118"],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\App.js",["119","120","121"],"import Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\nimport Home from \"./pages/Home\"\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport Router from \"./router\";\n\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Login\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\GlobalStyles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Login\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Input\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Input\\styles.js",[],["122","123"],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\input\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\input\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Register\\index.js",["124"],"import { Container, FormLogin, Header, Body, Button } from \"./styles\";\r\nimport Input from \"../../components/input\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { api } from \"../../services/api\";\r\nimport { useState } from \"react\";\r\nimport { sigIn } from \"../../services/security\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [isloading, setIsLoading] = useState(false);\r\n\r\n\r\n  const [registerStudent, setRegisterStudent] = useState({\r\n    ra: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    validPassword: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    \r\n\r\n    try {\r\n      if (registerStudent.password !== registerStudent.validPassword && !isloading)\r\n        return alert(\"Senhas Diferentes\");\r\n\r\n        setIsLoading(true);\r\n      const response = await api.post(\"/students\",{\r\n        ra: registerStudent.ra,\r\n        name: registerStudent.name,\r\n        email: registerStudent.email,\r\n        password: registerStudent.password,\r\n      });\r\n\r\n      sigIn(response.data);\r\n      \r\n      setIsLoading(false);\r\n\r\n      // IMPLEMENTAR A AUTORIZAÇÃO\r\n\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setRegisterStudent({ ...registerStudent, [e.target.id]: e.target.value });\r\n  };\r\n  return (\r\n    <>\r\n    {isloading && < Loading />}\r\n    <Container>\r\n      <FormLogin onSubmit={handleSubmit}>\r\n        <Header>\r\n          <h1>BEM VINDO AO SENAI OVERFLOW!</h1>\r\n          <h2>INFORME SEUS DADOS</h2>\r\n        </Header>\r\n        <Body>\r\n          <Input\r\n            id=\"ra\"\r\n            label=\"RA\"\r\n            type=\"text\"\r\n            value={registerStudent.ra}\r\n            handler={handleInput}\r\n            required\r\n          />\r\n          <Input\r\n            id=\"name\"\r\n            label=\"Nome\"\r\n            type=\"text\"\r\n            value={registerStudent.name}\r\n            handler={handleInput}\r\n            required\r\n          />\r\n          <Input\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            type=\"email\"\r\n            required\r\n            value={registerStudent.email}\r\n            handler={handleInput}\r\n            required\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            label=\"senha\"\r\n            type=\"password\"\r\n            value={registerStudent.password}\r\n            handler={handleInput}\r\n            required\r\n          />\r\n          <Input\r\n            id=\"validPassword\"\r\n            label=\"Confirmar senha\"\r\n            type=\"password\"\r\n            value={registerStudent.validPassword}\r\n            handler={handleInput}\r\n            required\r\n          />\r\n          <Button\r\n            disabled={\r\n              registerStudent.ra === \"\" ||\r\n              registerStudent.name === \"\" ||\r\n              registerStudent.email === \"\" ||\r\n              registerStudent.password === \"\" ||\r\n              registerStudent.validPassword === \"\"\r\n            }\r\n          >\r\n            Enviar\r\n          </Button>\r\n\r\n          <Link to=\"/\">Ou se ja tem cadastro clique Aqui para Entrar!</Link>\r\n        </Body>\r\n      </FormLogin>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Register;\r\n","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Register\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Home\\index.js",["125","126","127","128","129"],"import { format, addDays } from \"date-fns\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactEmbedGist from \"react-embed-gist\";\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  ProfileContainer,\r\n  FeedContainer,\r\n  ActionsContainer,\r\n  QuestionCards,\r\n  Logo,\r\n  IconSingOut,\r\n  FormNewQuestion,\r\n  GistIcon,\r\n  ContainerGist,\r\n} from \"./styles\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../../components/Tag\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { api } from \"../../services/api\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/input\";\r\nimport Select from \"../../components/Select\";\r\nimport imgProfile from \"../../assets/foto_perfil.png\";\r\nimport { sigIn, signOut, getUser, setUser } from \"../../services/security\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport { validSquiredImage } from \"../../utils\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nfunction Profile({ setIsLoading, handleReload }) {\r\n  const [student, setStudent] = useState(getUser());\r\n\r\n  const handleImage = async (e) => {\r\n    if (!e.target.files[0]) return;\r\n\r\n    try {\r\n      await validSquiredImage(e.target.files[0]);\r\n\r\n      const data = new FormData();\r\n\r\n      setIsLoading(true);\r\n\r\n      data.append(\"image\", e.target.files[0]);\r\n\r\n      const response = await api.post(`/students/${student.id}/images`, data);\r\n\r\n      setTimeout(() => {\r\n        setStudent({ ...student, image: response.data.image });\r\n        handleReload();\r\n      }, 1000);\r\n\r\n      setUser({ ...student, image: response.data.image });\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <img\r\n          src={student.image || imgProfile}\r\n          alt=\"imagem de perfil\"\r\n          alt=\"imagem de perfil\"\r\n        />\r\n        <label htmlFor=\"editImageProfile\">editar foto</label>\r\n        <input id=\"editImageProfile\" type=\"file\" onChange={handleImage} />\r\n      </section>\r\n      <section>\r\n        <strong>Nome:</strong>\r\n        <p>{student.studentName}</p>\r\n      </section>\r\n      <section>\r\n        <strong>Ra</strong>\r\n        <p>{student.ra}</p>\r\n      </section>\r\n      <section>\r\n        <strong>Email:</strong>\r\n        <p>{student.email}</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Question({ question, setIsLoading, setCurrentGist }) {\r\n  console.log(question);\r\n\r\n  const [display, setDisplay] = useState(\"none\");\r\n  const [storyAnswer, setStoryAnswer] = useState(\"\");\r\n  const [answers, setAnswer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnswer(question.Answers);\r\n  }, [question.Answers]);\r\n\r\n  const qtdAnswer = answers.length;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (storyAnswer.length < 10)\r\n      return alert(\"A Resposta deve ter no minimo 10 caracteres\");\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await api.post(`questions/${question.id}/answers`, {\r\n        answer: storyAnswer,\r\n      });\r\n\r\n      const aluno = getUser();\r\n\r\n      const answerAdded = {\r\n        id: response.data.id,\r\n        answer: response.data.answer,\r\n        created_at: response.data.createdAt,\r\n        Student: {\r\n          id: aluno.studentId,\r\n          name: aluno.name,\r\n        },\r\n      };\r\n\r\n      setAnswer([...answers, answerAdded]);\r\n\r\n      setStoryAnswer(\"\");\r\n      setIsLoading(false);\r\n\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // const handleInput = (e) => {\r\n  //   setStoryAnswer(e.target.value);\r\n\r\n  // };\r\n\r\n  const handleDisplay = () => {\r\n    if (display === \"none\") {\r\n      setDisplay(\"block\");\r\n    } else {\r\n      setDisplay(\"none\");\r\n    }\r\n  };\r\n\r\n  const student = getUser();\r\n\r\n  return (\r\n    <QuestionCards>\r\n      <header>\r\n        <img\r\n          src={question.Student.image || imgProfile}\r\n          alt=\"imagem de perfil\"\r\n        />\r\n        <strong>\r\n          Por{\" \"}\r\n          {student.studentId === question.Student.id\r\n            ? \"Você\"\r\n            : question.Student.name}\r\n        </strong>\r\n        <p>\r\n          em {format(new Date(question.created_at), \"dd/MM/yyyy 'às' HH:mm\")}\r\n        </p>\r\n        {question.gist && (\r\n          <GistIcon onClick={() => setCurrentGist(question.gist)} />\r\n        )}\r\n      </header>\r\n      <section>\r\n        <strong>{question.title}</strong>\r\n        <p>{question.description}</p>\r\n        <img src={question.image} alt=\"imagem da publicação\" />\r\n      </section>\r\n      <footer>\r\n        <h1 onClick={handleDisplay}>\r\n          {qtdAnswer === 0 ? (\r\n            \"Seja o primeiro a responder\"\r\n          ) : (\r\n            <>\r\n              {qtdAnswer} {qtdAnswer > 1 ? \"Respostas\" : \"Resposta\"}\r\n            </>\r\n          )}\r\n        </h1>\r\n        {answers.map((a) => (\r\n          <Answer answers={a} display={display} />\r\n        ))}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            minLength={10}\r\n            placeholder=\"Responda essa duvida !\"\r\n            required\r\n            onChange={(e) => setStoryAnswer(e.target.value)}\r\n            value={storyAnswer}\r\n          />\r\n          <button>Enviar</button>\r\n        </form>\r\n      </footer>\r\n    </QuestionCards>\r\n  );\r\n}\r\n\r\nfunction Answer({ answers, display }) {\r\n  const student = getUser();\r\n\r\n  return (\r\n    <section style={{ display: display }}>\r\n      <header>\r\n        <img src={answers.Student.image || imgProfile} alt=\"imagem de perfil\" />\r\n        <strong>\r\n          Por{\" \"}\r\n          {student.studentId === answers.Student.id\r\n            ? \"Você\"\r\n            : answers.Student.name}\r\n        </strong>\r\n        <p>{format(new Date(answers.created_at), \"dd/MM/yyyy 'às' HH:mm\")}</p>\r\n      </header>\r\n      <p>{answers.answer}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction NewQuestion({ handleReload, setIsLoading }) {\r\n  const [newQuestion, setNewQuestion] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    gist: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [categoriesSel, setCategoriesSel] = useState([]);\r\n\r\n  const [image, setImage] = useState(null);\r\n\r\n  const imageRef = useRef();\r\n\r\n  const categoriesRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadCategories = async () => {\r\n      try {\r\n        const response = await api.get(\"/categories\");\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    };\r\n\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const handleCategories = (e) => {\r\n    const idSel = e.target.value;\r\n\r\n    const categorySel = categories.find((c) => c.id.toString() === idSel);\r\n\r\n    if (categorySel && !categoriesSel.includes(categorySel))\r\n      setCategoriesSel([...categoriesSel, categorySel]);\r\n\r\n    e.target[e.target.selectedIndex].disabled = true;\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const handleImage = (e) => {\r\n    if (e.target.files[0]) {\r\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\r\n      imageRef.current.style.display = \"flex\";\r\n    } else {\r\n      imageRef.current.src = \"\";\r\n      imageRef.current.style.display = \"none\";\r\n    }\r\n\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUnselCategory = (idUnsel) => {\r\n    setCategoriesSel(categoriesSel.filter((c) => c.id !== idUnsel));\r\n\r\n    const { options } = categoriesRef.current;\r\n\r\n    for (var i = 0; i < options.length; i++) {\r\n      if (options[i].value === idUnsel.toString()) options[i].disabled = false;\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setNewQuestion({ ...newQuestion, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleAddNewQuestion = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"title\", newQuestion.title);\r\n    data.append(\"description\", newQuestion.description);\r\n\r\n    const categories = categoriesSel.reduce((s, c) => (s += c.id + \",\"), \"\");\r\n\r\n    data.append(\"categories\", categories.substr(0, categories.length - 1));\r\n\r\n    if (image) data.append(\"image\", image);\r\n    if (newQuestion.gist) data.append(\"gist\", newQuestion.gist);\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await api.post(\"/questions\", data, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      handleReload();\r\n    } catch (error) {\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormNewQuestion onSubmit={handleAddNewQuestion}>\r\n      <Input\r\n        id=\"title\"\r\n        label=\"titulo\"\r\n        value={newQuestion.title}\r\n        handler={handleInput}\r\n        required\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        label=\"descrição\"\r\n        value={newQuestion.description}\r\n        handler={handleInput}\r\n      />\r\n      <Input\r\n        id=\"gist\"\r\n        label=\"Gist\"\r\n        value={newQuestion.gist}\r\n        handler={handleInput}\r\n      />\r\n      <Select\r\n        id=\"categories\"\r\n        label=\"Categorias\"\r\n        handler={handleCategories}\r\n        ref={categoriesRef}\r\n      >\r\n        <option value=\"\">Selecione</option>\r\n        {categories.map((c) => (\r\n          <option key={c.id} value={c.id}>\r\n            {c.description}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      <div>\r\n        {categoriesSel.map((c) => (\r\n          <Tag\r\n            key={c.id}\r\n            info={c.description}\r\n            handleClose={() => handleUnselCategory(c.id)}\r\n          ></Tag>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" onChange={handleImage} />\r\n      <img alt=\"Pré-visualização\" ref={imageRef} />\r\n      <button>Enviar</button>\r\n    </FormNewQuestion>\r\n  );\r\n}\r\n\r\nfunction Gist({ gist, handleClose }) {\r\n  if (gist) {\r\n    const formatedGist = gist.split(\".com/\").pop();\r\n    return (\r\n      <Modal title=\"Exemplo de código\" handleClose={() => handleClose(undefined)}>\r\n        <ContainerGist>\r\n          <ReactEmbedGist gist={formatedGist} />\r\n        </ContainerGist>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [reload, setReload] = useState(null);\r\n\r\n  const [showNewQuestion, setShowNewQuestion] = useState(false);\r\n\r\n  const [isloading, setIsLoading] = useState(false);\r\n\r\n  const [currentGist, setCurrentGist] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const loadQuestions = async () => {\r\n      setIsLoading(true);\r\n      const response = await api.get(\"/feed\", {});\r\n\r\n      setQuestions(response.data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadQuestions();\r\n  }, [reload]);\r\n\r\n  const handleSingOut = () => {\r\n    signOut();\r\n\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const handleReload = () => {\r\n    setShowNewQuestion(false);\r\n    setReload(Math.random());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isloading && <Loading />}\r\n      <Gist gist={currentGist} handleClose={setCurrentGist} />\r\n      {showNewQuestion && (\r\n        <Modal\r\n          title=\"Faça uma pergunta\"\r\n          handleClose={() => setShowNewQuestion(false)}\r\n        >\r\n          <NewQuestion\r\n            handleReload={handleReload}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Container>\r\n        <Header>\r\n          <Logo src={logo} alt=\"imagem de perfil\" onClick={handleReload} />\r\n          <IconSingOut onClick={handleSingOut} />\r\n        </Header>\r\n        <Content>\r\n          <ProfileContainer>\r\n            <Profile handleReload={handleReload} setIsLoading={setIsLoading} />\r\n          </ProfileContainer>\r\n          <FeedContainer>\r\n            {questions.map((q) => (\r\n              <Question\r\n                question={q}\r\n                setIsLoading={setIsLoading}\r\n                setCurrentGist={setCurrentGist}\r\n              />\r\n            ))}\r\n          </FeedContainer>\r\n          <ActionsContainer>\r\n            <button onClick={() => setShowNewQuestion(true)}>\r\n              Fazer uma Pergunta!\r\n            </button>\r\n          </ActionsContainer>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\router.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\services\\api.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\services\\security.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\pages\\Home\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Modal\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Modal\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Select\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Select\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Tag\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Tag\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Loading\\index.js",["130"],"import { Container } from \"./styles\";\r\n\r\nimport imgLogo from \"../../assets/logo.png\";\r\n\r\nfunction Loading(){\r\n    return(\r\n    <Container>\r\n        <img src={imgLogo} />\r\n        Carregando...\r\n    </Container>\r\n    ); \r\n}\r\n\r\nexport default Loading;","C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Loading\\styles.js",[],["131","132"],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Alert\\index.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\components\\Alert\\styles.js",[],"C:\\Users\\20185522\\Desktop\\senai-overflow-web\\src\\utils.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"141","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"142","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":12},{"ruleId":"133","replacedBy":"143"},{"ruleId":"135","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":89,"column":13,"nodeType":"147","endLine":89,"endColumn":21},{"ruleId":"137","severity":1,"message":"148","line":1,"column":18,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"149","line":21,"column":8,"nodeType":"139","messageId":"140","endLine":21,"endColumn":14},{"ruleId":"137","severity":1,"message":"150","line":29,"column":10,"nodeType":"139","messageId":"140","endLine":29,"endColumn":15},{"ruleId":"137","severity":1,"message":"151","line":33,"column":10,"nodeType":"139","messageId":"140","endLine":33,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":71,"column":11,"nodeType":"147","endLine":71,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":8,"column":9,"nodeType":"154","endLine":8,"endColumn":30},{"ruleId":"133","replacedBy":"155"},{"ruleId":"135","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Home' is defined but never used.",["157"],["158"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'addDays' is defined but never used.","'styled' is defined but never used.","'sigIn' is defined but never used.","'FaGithub' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["157"],["158"],"no-global-assign","no-unsafe-negation"]